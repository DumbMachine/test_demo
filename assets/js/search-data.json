{
  
    
        "post0": {
            "title": "Title",
            "content": "html = &quot;&quot;&quot; &lt;head&gt; &lt;script src=&quot;js/profile.js&quot;&gt;&lt;/script&gt; &lt;style&gt; @import &#39;https://fonts.googleapis.com/css?family=Raleway&#39;; * { outline: none; user-select: none; } body, html { margin: 0; background: #ddd; color: #7a7b7c; } body { font-family: &quot;Raleway&quot;, &quot;Microsoft JhengHei&quot;, Arial, sans-serif; } .profile { width: 330px; height: 100px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border-radius: 5px; background-color: #fafafa; box-shadow: 0 0 2rem #babbbc; animation: show-profile 0.5s forwards ease-in-out; } @keyframes show-profile { 0% { width: 0; } } .profile .photo, .profile .content { box-sizing: border-box; } .profile .photo { width: 100px; height: 100px; border-radius: 50%; overflow: hidden; border: 5px solid #fafafa; background-color: #fafafa; margin-left: -50px; box-shadow: 0 0 0.5rem #babbbc; animation: rotate-photo 0.5s forwards ease-in-out; } @keyframes rotate-photo { 100% { transform: rotate(-360deg); } } .profile .photo img { width: 100%; } .profile .content { padding: 10px; overflow: hidden; position: absolute; width: 100%; height: 100%; top: 0; left: 0; } .profile .content::before { content: &quot;&quot;; position: absolute; width: 230px; height: 150px; background-color: #e9f3e6; left: 0; top: -20px; z-index: -1; transform: rotate(-8deg); } .profile .content .text { margin-top: 20px; margin-left: 50px; } .profile .content .text h3, .profile .content .text h6 { font-weight: normal; margin: 3px 0; letter-spacing: 0.5px; white-space: nowrap; } .profile .content .btn { background-color: #abc; width: 50px; height: 50px; position: absolute; right: 25px; top: 25px; border-radius: 50%; z-index: 1; cursor: pointer; transition-duration: 0.3s; animation: pop-btn 0.3s both ease-in-out 0.5s; } @keyframes pop-btn { 0% { transform: scale(0); } 80% { transform: scale(1.2); } 100% { transform: scale(1); } } .profile .content .btn:hover { box-shadow: 0 0 0 5px rgba(170, 187, 204, 0.5); } .profile .content .btn span { width: 60%; height: 2px; position: absolute; background-color: white; top: 50%; left: 20%; transform: translateY(-50%); animation: to-hamburger 0.3s forwards ease-in-out; } .profile .content .btn span::before, .profile .content .btn span::after { content: &quot;&quot;; width: 100%; height: 2px; position: absolute; background-color: white; transition-duration: 0.3s; transform: rotate(0deg); right: 0; } .profile .content .btn span::before { margin-top: -7px; } .profile .content .btn span::after { margin-top: 7px; } .profile .content .btn.active span { animation: to-arrow 0.3s forwards ease-in-out; } .profile .content .btn.active span::before, .profile .content .btn.active span::after { width: 60%; right: -1px; } .profile .content .btn.active span::before { transform: rotate(45deg); } .profile .content .btn.active span::after { transform: rotate(-45deg); } @keyframes to-hamburger { from { transform: translateY(-50%) rotate(-180deg); } } @keyframes to-arrow { from { transform: translateY(-50%) rotate(0deg); } to { transform: translateY(-50%) rotate(180deg); } } .profile .box { width: 150px; height: 150px; opacity: 0; border-radius: 50%; background-color: rgba(255, 255, 255, 0.7); position: absolute; top: 50%; right: -40%; transform: translate(-50%, -50%); transition-duration: 0.3s; } .profile .box i { width: 50px; height: 50px; border-radius: 50%; background-color: #ececec; font-size: 26px; text-align: center; line-height: 50px; position: absolute; left: 18px; top: calc(75px - 50px/2); box-shadow: 0 0 0.5rem #babbbc; transition-duration: 0.3s; } .profile .box i:hover { transition-delay: initial !important; box-shadow: 0 0 0 5px #babbbc; } .profile .box.open { opacity: 1; } .profile .box.open i { left: 60px; } .profile .box.open i:nth-of-type(1) { transform: rotate(-90deg) translateX(120px) rotate(90deg); transition-delay: 0s; } .profile .box.open i:nth-of-type(2) { transform: rotate(-45deg) translateX(120px) rotate(45deg); transition-delay: 0.1s; } .profile .box.open i:nth-of-type(3) { transform: rotate(0deg) translateX(120px) rotate(0deg); transition-delay: 0.2s; } .profile .box.open i:nth-of-type(4) { transform: rotate(45deg) translateX(120px) rotate(-45deg); transition-delay: 0.3s; } .profile .box.open i:nth-of-type(5) { transform: rotate(90deg) translateX(120px) rotate(-90deg); transition-delay: 0.4s; } &lt;/style&gt; &lt;/head&gt; &lt;div class=&quot;profile&quot;&gt; &lt;div class=&quot;photo&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/profile_images/874276197357596672/kUuht00m_400x400.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;div class=&quot;text&quot;&gt; &lt;h3&gt;Kelly Chen&lt;/h3&gt; &lt;h6&gt;Front-end Web Designer&lt;/h6&gt; &lt;/div&gt; &lt;div class=&quot;btn&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;box&quot;&gt;&lt;i class=&quot;fa fa-codepen&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-facebook&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-tumblr&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-twitter&quot;&gt;&lt;/i&gt;&lt;/div&gt; &lt;/div&gt; &quot;&quot;&quot; from IPython.core.display import HTML print() print() print() print() print() print() print() print() print() print() print() print() print() print() print() print() print() print() HTML(html) . . . Kelly Chen . Front-end Web Designer . !ls . Untitled.ipynb css js .",
            "url": "https://dumbmachine.github.io/test_demo/2020/02/21/introducing-fastpages.html",
            "relUrl": "/2020/02/21/introducing-fastpages.html",
            "date": " • Feb 21, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://dumbmachine.github.io/test_demo/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://dumbmachine.github.io/test_demo/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://dumbmachine.github.io/test_demo/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://dumbmachine.github.io/test_demo/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}